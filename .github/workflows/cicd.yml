name: Next.js CI-CD

on:
  push:
    branches: [ main ]

env:
  SERVICE_NAME: jaynarol-blogs

  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  GKE_PROJECT: ${{ secrets.GKE_PROJECT }}
  GKE_SA_KEY: ${{ secrets.GKE_SA_KEY }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}

jobs:
  CI-CD-Flow:
    runs-on: ubuntu-latest

    steps:
      - name: Prepare
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js 15.x
        uses: actions/setup-node@v2
        with:
          node-version: 15.x

      - name: Test Source with Jest
        run: |-
          npm ci
          npm test

      - name: Scan Source with Sonar
        uses: sonarsource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.organization=vcodeth
            -Dsonar.projectKey=vCodeTH_jaynarol-blogs
            -Dsonar.language=js
            -Dsonar.sources=src/
            -Dsonar.exclusions=node_modules/**/*,coverage/**/*,src/styles/**/*,src/public/**/*,**/__test__/**/*,**/*.test.*,*.config.{js,json}
            -Dsonar.coverage.exclusions=**/*.tsx,**/__test__/*,**/*.test.*,*.config.{js,json}
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info

      - name: Build NextJs
        id: build
        run: |-
          echo ::set-output name=IMAGE_NAME::"asia.gcr.io/${{ env.GKE_PROJECT }}/${{ env.SERVICE_NAME }}:$GITHUB_SHA"
          npm run build

      - name: Pack Artifact
        run: |-
          docker build \
                    --tag ${{ steps.build.outputs.IMAGE_NAME }} \
                    --build-arg GITHUB_SHA="$GITHUB_SHA" \
                    --build-arg GITHUB_REF="$GITHUB_REF" \
                    .

      - name: Scan Artifact
        uses: anchore/scan-action@v2
        with:
          image: ${{ steps.build.outputs.IMAGE_NAME }}
          fail-build: true
          acs-report-enable: true
          severity-cutoff: high

      - name: Connect GCP
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ env.GKE_PROJECT }}
          service_account_key: ${{ env.GKE_SA_KEY }}

      - name: Ship Artifact to GCR
        run: |-
          gcloud --quiet auth configure-docker
          gcloud container clusters get-credentials "${{ env.GKE_CLUSTER }}" --zone "${{ env.GKE_ZONE }}"
          docker push ${{ steps.build.outputs.IMAGE_NAME }}